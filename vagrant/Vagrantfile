VAGRANTFILE_API_VERSION = "2"
#BOX_IMAGE = "tknerr/baseimage-ubuntu-16.04"
BOX_IMAGE = "ubuntu/xenial64"
DGX_NODE_COUNT = 1

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true
  
  config.vm.define "mgmt01" do |mgmt|
    mgmt.vm.provider "virtualbox" do |vb|
      vb.memory = 2048
    end
    mgmt.vm.box = BOX_IMAGE
    mgmt.vm.hostname = "mgmt01"
    mgmt.vm.network :private_network, ip: "10.0.0.2"
  end

  config.vm.define "login01" do |login|
    login.vm.box = BOX_IMAGE
    login.vm.hostname = "login01"
    login.vm.network :private_network, ip: "10.0.0.4"
  end

  (1..DGX_NODE_COUNT).each do |i|
    config.vm.define "dgx0#{i}" do |dgx|
      dgx.vm.box = BOX_IMAGE
      dgx.vm.hostname = "dgx0#{i}"
      dgx.vm.network :private_network, ip: "10.0.0.#{i + 10}"
    end
  end

  config.vm.provision "ansible" do |ansible|
    ansible.inventory_path = "../config/inventory"
    ansible.config_file = "../ansible.cfg"
    ansible.playbook = "../ansible/playbooks/bootstrap.yml"
    ansible.skip_tags = ["dgx-os"]
    #ansible.limit = "mgmt"
  end
end
