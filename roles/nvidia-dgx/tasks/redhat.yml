---
- name: include os specific variables
  include_vars: redhat.yml

- name: Add epel repo
  yum_repository:
    name: epel
    description: EPEL YUM repo
    baseurl: "{{ epel_baseurl }}"
    gpgkey: "{{ epel_gpgkey }}"

- name: Add DGX repo
  yum_repository:
    name: nvidia-dgx-7
    description: NVIDIA DGX EL7
    gpgkey: "{{ nvidia_dgx_rhel_gpgkey }}"
    baseurl: "{{ nvidia_dgx_rhel_baseurl }}"

- name: Install packages
  yum:
    name: "@DGX-1 Configurations"
    state: present
    update_cache: yes
  when: ansible_product_name is search("DGX-1")

- name: Install packages
  yum:
    name: "@DGX-2 Configurations"
    state: present
    update_cache: yes
  when: ansible_product_name is search("DGX-2")

- name: Install extra packages
  yum:
    name: "{{ dgx_extra_packages }}"
    state: present
    update_cache: yes

- name: check kernel versions
  yum:
    list: kernel
  register: yum_list

- name: register installed kernel version
  debug:
    msg: "{{ yum_list.results | selectattr('yumstate', 'equalto', 'installed') | list }}"
  register: kernel_version

- name: check kernel-headers versions
  yum:
    list: kernel-headers
  register: yum_list

- name: register installed kernel-headers version
  debug:
    msg: "{{ yum_list.results | selectattr('yumstate', 'equalto', 'installed') | list }}"
  register: kernel_headers_version

- name: update kernel if headers don't match
  yum:
    name:
      - kernel
      - kernel-tools
      - kernel-tools-libs
      - kernel-devel
      - kernel-debug-devel
      - kernel-headers
    state: latest
  register: kernel_update
  when: kernel_version.msg[0].release != kernel_headers_version.msg[0].release
  tags: skip_ansible_lint

- name: Install driver packages
  package:
    name: "{{ item }}"
  with_items:
    - cuda-drivers
    - cuda-drivers-diagnostic
    - dgx-persistence-mode
  register: install_driver
  notify: reboot after driver install

- name: Install Docker and the NVIDIA container runtime
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - docker
    - "@NVIDIA container runtime"
  notify:
    - name: restart docker

- name: Install DGX System Management Tools
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - python36
    - "@DGX System Management"
