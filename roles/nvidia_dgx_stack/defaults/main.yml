nvidia_dgx_rhel_baseurl: "https://international.download.nvidia.com/dgx/repos/{{ dgx_repo_dir }}/"
nvidia_dgx_rhel_gpgkey: "https://international.download.nvidia.com/dgx/repos/RPM-GPG-KEY-dgx-cosmos-support"
epel_package: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
epel_key_url: "https://download.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}"

# Download URL for the Ubuntu repo files
nvidia_dgx_ubuntu_dgx_repo_download: "https://repo.download.nvidia.com/baseos/ubuntu/focal/dgx-repo-files.tgz"

# Configure the RAID array on the DGX
dgx_configure_raid_array: false

# Force configuring the RAID array, even if it's already present
dgx_force_raid_config: false

nvidia_driver_skip_reboot: false
dgx_raid_mount_path: /raid
cachefilesd_cache_dir: /raid
cachefilesd_cache_tag: dgx1cache
cachefilesd_cache_brun: 25%
cachefilesd_cache_bcull: 10%
cachefilesd_cache_dir_mode: 1775

# Perform install even when DGX hardware is not detected
# Use mostly for testing
dgx_override_install: false
dgx_override_product_type: ""

# Optional features
dgx_full_upgrade: false
dgx_disable_unattended_upgrades: true
dgx_enable_sol: true
dgx_enable_logrotate: true
dgx_install_ofed: true
dgx_install_docker: true
dgx_install_nvsm: true
dgx_install_optional: true
dgx_enable_mlnx_pxe: true
dgx_disable_srp: true
dgx_configure_cachefilesd: true

# NVIDIA CUDA driver branch
dgx_cuda_driver_branch: "470"
