# SLURMCTLD
SlurmUser={{ slurm_username }}
ControlMachine={{ slurm_controller_host.split(".")[0] | lower }}
SlurmctldPort=6817
StateSaveLocation={{ slurm_spool_dir }}/slurmctld
ProctrackType=proctrack/cgroup

# SLURMD
SlurmdPort=6818
SlurmdSpoolDir={{ slurm_spool_dir }}/slurmd
ReturnToService=1

# ACCOUNTING
AccountingStorageType=accounting_storage/slurmdbd
AccountingStorageHost={{ slurm_controller_host.split(".")[0] | lower }}
AccountingStorageUser={{ slurm_db_username }}
AccountingStoragePass=/var/run/munge/munge.socket.2
AccountingStorageEnforce=associations,limits,qos
ClusterName={{ slurm_cluster_name }}
JobAcctGatherType=jobacct_gather/cgroup
AccountingStorageTRES=gres/gpu
DebugFlags=CPU_Bind,gres

# SCHEDULING
SelectType=select/cons_tres
SelectTypeParameters=CR_Core_Memory,CR_CORE_DEFAULT_DIST_BLOCK,CR_ONE_TASK_PER_CORE
FastSchedule=1
SchedulerType=sched/backfill

# TASK SETTINGS
TaskPlugin=affinity,cgroup
TaskPluginParam=Sched,Autobind=None
PropagateResourceLimitsExcept=MEMLOCK
PrologFlags=alloc,contain
Prolog={{ slurm_sysconf_dir }}/prolog.sh
Epilog={{ slurm_sysconf_dir }}/epilog.sh

# LOGGING
SlurmctldDebug=3
SlurmctldLogFile=/var/log/slurm/slurmctld.log
SlurmdDebug=3
SlurmdLogFile=/var/log/slurm/slurmd.log
JobCompType=jobcomp/none

# MPI
TmpFS=/tmp/slurm

# MISC
AuthType=auth/munge
DebugFlags=CPU_Bind
RebootProgram=/sbin/reboot

# PARTITIONS
{% set slurm_oversubscribe = (slurm_manage_gpus == true)|ternary('NO', 'EXCLUSIVE') %}
PartitionName=batch Nodes=ALL Default=YES DefMemPerCPU=0 State=UP OverSubscribe={{ slurm_oversubscribe }}

# NODES
{% if slurm_manage_gpus %}
GresTypes=gpu
{% endif %}
{% for node_name in slurm_compute_hosts %}
{% set facts = hostvars[node_name]['ansible_local']['slurm_node_config'] -%}
{% set gpu_topology =  hostvars[node_name]["ansible_local"]["topology"]["gpu_topology"] -%}
    NodeName={{ node_name.split(".")[0] | lower }}{{ " " -}}
    NodeAddr={{ node_name }}{{ " " -}}
    {% if slurm_manage_gpus %} {%- if gpu_topology|count %} Gres=gpu:{{ gpu_topology|count }} {% endif -%} {% endif %}
    Sockets={{ facts.cpu_topology.sockets|int }}{{ " " -}}
    CoresPerSocket={{ facts.cpu_topology.cores_per_socket|int }}{{ " " -}}
    ThreadsPerCore={{ facts.cpu_topology.threads_per_core }}{{ " " -}}
    CPUs={{ facts.cpu_topology.logical_cpus|int }}{{ " " -}}
    RealMemory={{ (facts.memory.total_mb|float * 0.95)|int }}
{% endfor %}
