---
# Kubernetes Cluster Playbook

- hosts: 127.0.0.1
  connection: local
  gather_facts: false
  tasks:
    - name: make sure kubespray is at the correct version
      command: git submodule update --init

- include: bootstrap.yml
  vars:
    ansible_user: "{{ lookup('env','USER') }}"

- import_playbook: ../kubespray/cluster.yml
  vars:
    ansible_become: yes
    ansible_user: "{{ lookup('env','USER') }}"
    kubectl_localhost: true
    kubeconfig_localhost: true
    helm_enabled: true
    tiller_node_selectors: "node-role.kubernetes.io/master=''"
    docker_version: 18.06
    docker_dns_servers_strict: no
    docker_storage_options: -s overlay2
 
- hosts: 127.0.0.1
  connection: local
  gather_facts: false
  tasks:
    - name: create kube config directory for current user
      file:
        path: "{{ lookup('env','HOME') + '/.kube/' }}"
        state: directory
    - name: check for kube config file
      stat:
        path: "../k8s-config/artifacts/admin.conf"
      register: kubeconf
    - name: copy kube config file for current user
      copy:
        src: "../k8s-config/artifacts/admin.conf"
        dest: "{{ lookup('env','HOME') + '/.kube/config' }}"
        backup: yes
      when: kubeconf.stat.exists

- include: nvidia-gpu-driver.yml
  vars:
    ansible_user: "{{ lookup('env','USER') }}"
- include: nvidia-container-runtime.yml
  vars:
    ansible_user: "{{ lookup('env','USER') }}"
- include: k8s-gpu-plugin.yml
  vars:
    ansible_user: "{{ lookup('env','USER') }}"

- hosts: 127.0.0.1
  connection: local
  gather_facts: false
  tasks:
    - name: check for kubectl
      stat:
        path: "../k8s-config/artifacts/kubectl"
      register: kubectl_local
    - name: modify kubectl permissions
      file:
        path: "../k8s-config/artifacts/kubectl"
        mode: '0755'
      when: kubectl_local.stat.exists
    - name: copy kubectl 
      copy:
        src: "../k8s-config/artifacts/kubectl"
        dest: "/usr/local/bin/kubectl"
      when: kubectl_local.stat.exists
      become: true
      ignore_errors: yes
      register: kubectl_copied
    - name: check for copied kubectl
      stat:
        path: "/usr/local/bin/kubectl"
      register: kubectl_system
    - name: modify kubectl permissions
      file:
        path: "/usr/local/bin/kubectl"
        owner: root
        group: root
        mode: '0755'
      when: kubectl_system.stat.exists
    - name: manually move kubectl binary
      debug:
        msg: "Unable to move kubectl, run: sudo cp ./k8s-config/artifacts/kubectl /usr/local/bin"
      when: kubectl_copied is failed
