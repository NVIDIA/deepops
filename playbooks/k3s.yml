---
- hosts: slurm-cluster
  become: true
  vars:
    k3s_install_script: https://get.k3s.io
    k3s_installer_path: /tmp/install_k3s.sh
    helm_install_script: https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get
    helm_installer_path: /tmp/install_helm.sh
  tasks:
    - name: download k3s installer
      get_url:
        url: "{{ k3s_install_script }}"
        dest: "{{ k3s_installer_path }}"
        mode: 0755
    - name: download helm installer
      get_url:
        url: "{{ helm_install_script }}"
        dest: "{{ helm_installer_path }}"
        mode: 0755

- hosts: slurm-master
  become: true
  vars:
    k3s_bin_path: /usr/local/bin/k3s
    k3s_installer_path: /tmp/install_k3s.sh
    k3s_installer_args: ""
    k3s_token_file: /var/lib/rancher/k3s/server/node-token
  tasks:
    - name: run k3s install script
      command: "{{ k3s_installer_path }} {{ k3s_installer_args }}"
      args:
        creates: "{{ k3s_bin_path }}"
    - name: wait for server token to generate
      wait_for:
        path: "{{ k3s_token_file }}"
    - name: register master token
      slurp:
        src: "{{ k3s_token_file }}"
      register: k3s_token

- hosts: slurm-node
  become: true
  vars:
    k3s_bin_path: /usr/local/bin/k3s
    k3s_installer_path: /tmp/install_k3s.sh
    k3s_installer_args: ""
  environment:
    K3S_URL: "https://{{ groups['slurm-master'][0] }}:6443"
    K3S_TOKEN: "{{ hostvars[groups['slurm-master'][0]]['k3s_token'].content | b64decode }}"
  tasks:
    - name: run k3s install script
      command: "{{ k3s_installer_path }} {{ k3s_installer_args }}"
      args:
        creates: "{{ k3s_bin_path }}"

- hosts: slurm-master
  become: true
  vars:
    k3s_manifest_path: /var/lib/rancher/k3s/server/manifests
  tasks:
    - name: create helm chart
      blockinfile:
        path: "{{ k3s_manifest_path }}/prometheus-operator.yml"
        create: yes
        block: |
          apiVersion: k3s.cattle.io/v1
          kind: HelmChart
          metadata:
            name: prometheus-operator
            namespace: kube-system
          spec:
            chart: stable/prometheus-operator
            targetNamespace: monitoring
    - name: create helm chart
      blockinfile:
        path: "{{ k3s_manifest_path }}/kube-prometheus.yml"
        create: yes
        block: |
          apiVersion: k3s.cattle.io/v1
          kind: HelmChart
          metadata:
            name: kube-prometheus
            namespace: kube-system
          spec:
            chart: stable/kube-prometheus
            targetNamespace: monitoring
  tags:
    - never
    - helm

- hosts: slurm-master
  become: true
  vars:
    k3s_bin_path: /usr/local/bin/k3s
    k3s_uninstaller_path: /usr/local/bin/k3s-uninstall.sh
  tasks:
    - name: uninstall k3s
      command: "{{ k3s_uninstaller_path }}"
      args:
        removes: "{{ k3s_bin_path }}"
  tags:
    - never
    - uninstall

- hosts: slurm-node
  become: true
  vars:
    k3s_bin_path: /usr/local/bin/k3s
    k3s_uninstaller_path: /usr/local/bin/k3s-agent-uninstall.sh
  tasks:
    - name: uninstall k3s
      command: "{{ k3s_uninstaller_path }}"
      args:
        removes: "{{ k3s_bin_path }}"
  tags:
    - never
    - uninstall

- hosts: slurm-master
  become: true
  vars:
    deepops_repo_url: https://github.com/NVIDIA/deepops.git
    deepops_repo_path: /opt/deepops
    helm_installer_path: /tmp/install_helm.sh
    helm_installer_args: ""
    helm_bin_path: /usr/local/bin/helm
  environment:
    PATH: /usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
  tasks:
    - name: install git
      package:
        name: git
        state: present
    - name: grab deepops repo
      git:
        repo: "{{ deepops_repo_url }}"
        dest: "{{ deepops_repo_path }}"
        depth: 1
    - name: modify repo permissions
      file:
        path: "{{ deepops_repo_path }}"
        state: directory
        owner: "{{ ansible_user }}"
        recurse: yes
    - name: run helm install script
      command: "{{ helm_installer_path }} {{ helm_installer_args }}"
      args:
        creates: "{{ helm_bin_path }}"
  tags:
    - never
    - deepops

- hosts: slurm-master
  vars:
    deepops_repo_path: /opt/deepops
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  tasks:
    - name: setup deepops
      command: ./scripts/setup.sh
      args:
        chdir: "{{ deepops_repo_path }}"
        creates: "{{ deepops_repo_path }}/config"
    - name: init helm
      command: helm init --history-max 200
  tags:
    - never
    - deepops
