---
- hosts: all
  become: yes
  roles:
    - name: facts

# Set root SSH key to allow SSH/ansible when no slurm job running for ansible user
- hosts: slurm-node
  become: yes
  tasks:
    - name: Add SSH public key to root user authorized keys
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', ansible_ssh_private_key_file | default(lookup('env','HOME') + '/.ssh/id_rsa') + '.pub') }}"

# Build slurm first on all nodes
- hosts: slurm-cluster
  become: yes
  tasks:
    - name: build slurm on all nodes
      include_role:
        name: slurm
        tasks_from: build

# Configure slurm.conf on all nodes
- hosts: slurm-cluster
  become: yes
  roles:
    - name: slurm
      vars:
        user: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
        slurm_workflow_build: no

# Set up slurm controller
- hosts: slurm-master
  become: yes
  roles:
    - name: slurm
      vars:
        user: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
        is_controller: yes
        slurm_workflow_build: no

# Set up slurm nodes
- hosts: slurm-node
  become: yes
  roles:
    - name: slurm
      vars:
        user: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
        is_compute: yes
        slurm_workflow_build: no

# Set up slurm-login-on-compute if enabled
- hosts: slurm-master
  become: yes
  tasks:
    - name: Setup slurm login on compute if enabled.
      include_role:
        name: slurm
        tasks_from: login-compute-setup
      vars:
        user: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
        is_controller: yes
      when: slurm_login_on_compute | default(false)
