---
# Enable/disable MIG mode
# run with tags --enable or --disable
- hosts: all
  become: yes

  vars:
    # Various services referencing nvidia GPUs, that need to be stopped when
    # toggling MIG mode.
    #
    # Notably nvidia-persistenced and fabric-manager handle MIG and GPU resets
    # already and don't need to be stopped.
    nv_services:
      - dcgm.service
      - nvsm.service
      - docker.service

  tasks:
    # Check for MIG-capable devices
    - name: check for MIG capable devices
      command: nvidia-smi --query-gpu=pci.bus_id,mig.mode.current --format=csv,noheader
      register: has_mig

    # Pre-tasks
    - name: collect facts about services
      service_facts:
      tags: enable, disable, never

    - name: stop system services referencing nvidia
      systemd:
        state: stopped
        name: "{{ item }}"
      loop: "{{ nv_services }}"
      when: item in ansible_facts.services and ansible_facts.services[item].state == "running"
      tags: enable, disable, never

    # Manage MIG
    - name: enable MIG mode
      command: nvidia-smi -mig 1
      tags: enable, never

    - name: disable MIG mode
      command: nvidia-smi -mig 0
      tags: disable, never

    # Post-tasks
    - name: restart system services referencing nvidia
      systemd:
        state: started
        name: "{{ item }}"
      loop: "{{ nv_services }}"
      when: item in ansible_facts.services and ansible_facts.services[item].state == "running"
      tags: enable, disable, never

    # Permissions
    - name: grant user permissions to manage MIG instances
      file:
        path: "{{ item }}"
        owner: root
        group: root
        mode: '0444'
      with_items:
        - /proc/driver/nvidia/capabilities/mig/config
        - /proc/driver/nvidia/capabilities/mig/monitor
      tags: enable, never
