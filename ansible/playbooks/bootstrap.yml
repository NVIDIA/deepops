---
# install python to support ansible
- hosts: all
  become: yes
  gather_facts: False
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Install Python for Ansible
      raw: "test -e /usr/bin/python || (http_proxy={{proxy_env.http_proxy if (proxy_env is defined and proxy_env.http_proxy is defined) else \"\"}} https_proxy={{proxy_env.https_proxy if (proxy_env is defined and proxy_env.https_proxy is defined) else \"\"}} apt -y update && apt install -y python-minimal)"
      register: output
      changed_when: output.stdout != ""

- hosts: dgx-servers
  become: yes
  tasks:
    - name: disable fail2ban
      systemd: state=stopped enabled=no name=fail2ban
  tags:
    - skip-for-virtual

# set system hostname
# configure ssh
# configure sudo
# create deepops user
- hosts: all
  become: yes
  #pre_tasks:
  #  - hostname:
  #      name: "{{ inventory_hostname }}"
  roles:
    - ssh
  tasks:
    - name: allow sudo without password for users in the sudo group
      lineinfile: dest=/etc/sudoers regexp="^%sudo" line="%sudo ALL=(ALL) NOPASSWD:ALL"
    - name: remove swap from fstab
      lineinfile: path=/etc/fstab regexp='swap' state=absent
    - name: disable swap
      command: swapoff -a
    - name: create /local
      file:
        path: /local
        state: directory
    - name: create /opt/deepops
      file:
        path: /opt/deepops
        state: directory
    - name: create deepops user
      user:
        name: deepops
        uid: 1337
        home: /local/deepops
        shell: /bin/bash
        state: present
        groups:
          - sudo
    - name: set authorized key for deepops user
      authorized_key:
        user: deepops
        state: present
        key: "{{ lookup('file', '~/.ssh/deepops_rsa.pub') }}"
